{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Charts/Chart.jsx","components/CountryPicker/CountryPicker.jsx","app.js","index.js","app.module.css","components/Charts/Chart.module.css","components/CountryPicker/CountryPicker.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","console","log","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legends","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","image","src","alt","React","Component","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.8e0aba10.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\"};","import React from \"react\";\nimport { Card, Typography, CardContent, Grid } from \"@material-ui/core\";\nimport CountUp from \"react-countup\";\nimport cx from \"classnames\";\nimport styles from \"./Cards.module.css\";\n\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\n  console.log(confirmed);\n  if (!confirmed) {\n    return \"Loading.....\";\n  }\n  return (\n    <div className={styles.container}>\n      <Grid container spacing={3} justify=\"center\">\n        <Grid\n          item\n          component={Card}\n          xs={12}\n          md={3}\n          className={cx(styles.card, styles.infected)}\n        >\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n              Infected\n            </Typography>\n            <Typography variant=\"h5\">\n              <CountUp\n                start={0}\n                end={confirmed.value}\n                duration={2.5}\n                separator=\",\"\n              />\n            </Typography>\n            <Typography color=\"textSecondary\">\n              {new Date(lastUpdate).toDateString()}\n            </Typography>\n            <Typography variant=\"body2\">\n              Number of active cases of COVID-19\n            </Typography>\n          </CardContent>\n        </Grid>\n\n        <Grid\n          item\n          component={Card}\n          xs={12}\n          md={3}\n          className={cx(styles.card, styles.recovered)}\n        >\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n              Recovered\n            </Typography>\n            <Typography variant=\"h5\">\n              <CountUp\n                start={0}\n                end={recovered.value}\n                duration={2.5}\n                separator=\",\"\n              />\n            </Typography>\n            <Typography color=\"textSecondary\">\n              {new Date(lastUpdate).toDateString()}\n            </Typography>\n            <Typography variant=\"body2\">\n              Number of recovered cases from COVID-19\n            </Typography>\n          </CardContent>\n        </Grid>\n\n        <Grid\n          item\n          component={Card}\n          xs={12}\n          md={3}\n          className={cx(styles.card, styles.deaths)}\n        >\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n              Deaths\n            </Typography>\n            <Typography variant=\"h5\">\n              <CountUp\n                start={0}\n                end={deaths.value}\n                duration={2.5}\n                separator=\",\"\n              />\n            </Typography>\n            <Typography color=\"textSecondary\">\n              {new Date(lastUpdate).toDateString()}\n            </Typography>\n            <Typography variant=\"body2\">\n              Number of people died due to COVID-19\n            </Typography>\n          </CardContent>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Cards;\n","import axios from \"axios\";\n\nconst url = \"https://covid19.mathdro.id/api\";\n\nexport const fetchData = async country => {\n  let changeableUrl = url;\n\n  if (country) {\n    changeableUrl = `${url}/countries/${country}`;\n  }\n\n  try {\n    const {\n      data: { confirmed, recovered, deaths, lastUpdate }\n    } = await axios.get(changeableUrl);\n    return {\n      confirmed,\n      recovered,\n      deaths,\n      lastUpdate\n    };\n  } catch (error) {}\n};\n\nexport const fetchDailyData = async () => {\n  try {\n    const { data } = await axios.get(`${url}/daily`);\n\n    const modifiedData = data.map(dailyData => ({\n      confirmed: dailyData.confirmed.total,\n      deaths: dailyData.deaths.total,\n      date: dailyData.reportDate\n    }));\n    return modifiedData;\n  } catch (error) {}\n};\n\nexport const fetchCountries = async () => {\n  try {\n    const {\n      data: { countries }\n    } = await axios.get(`${url}/countries`);\n    return countries.map(country => country.name);\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import React, { useState, useEffect } from \"react\";\nimport { fetchDailyData } from \"../../api\";\nimport { Line, Bar } from \"react-chartjs-2\";\nimport styles from \"./Chart.module.css\";\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\n  const [dailyData, setDailyData] = useState([]);\n\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setDailyData(await fetchDailyData());\n    };\n\n    fetchAPI();\n  }, []);\n\n  const lineChart = dailyData ? (\n    <Line\n      data={{\n        labels: dailyData.map(({ date }) => date),\n        datasets: [\n          {\n            data: dailyData.map(({ confirmed }) => confirmed),\n            label: \"Infected\",\n            borderColor: \"#3333ff\",\n            fill: true\n          },\n          {\n            data: dailyData.map(({ deaths }) => deaths),\n            label: \"Deaths\",\n            borderColor: \"red\",\n            backgroundColor: \"rgba(255,0,0,0.5)\",\n            fill: true\n          }\n        ]\n      }}\n    />\n  ) : null;\n\n  const barChart = confirmed ? (\n    <Bar\n      data={{\n        labels: [\"Infected\", \"Recovered\", \"Deaths\"],\n        datasets: [\n          {\n            label: \"people\",\n            backgroundColor: [\n              \"rgba(0, 0, 255, 0.5)\",\n              \"rgba(0, 255, 0, 0.5)\",\n              \"rgba(255, 0, 0, 0.5)\"\n            ],\n            data: [confirmed.value, recovered.value, deaths.value]\n          }\n        ]\n      }}\n      options={{\n        legends: { display: false },\n        title: { display: true, text: `Current state in ${country}` }\n      }}\n    />\n  ) : null;\n  return (\n    <div className={styles.container}>{country ? barChart : lineChart}</div>\n  );\n};\n\nexport default Chart;\n","import React, { useEffect, useState } from \"react\";\nimport { NativeSelect, FormControl } from \"@material-ui/core\";\n\nimport { fetchCountries } from \"../../api\";\nimport styles from \"./CountryPicker.module.css\";\n\nconst CountryPicker = ({ handleCountryChange }) => {\n  const [fetchedCountries, setFetchCountries] = useState([]);\n\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setFetchCountries(await fetchCountries());\n    };\n\n    fetchAPI();\n  }, [setFetchCountries]);\n\n  console.log(fetchedCountries);\n\n  return (\n    <FormControl className={styles.formControl}>\n      <NativeSelect\n        defaultValue=\"\"\n        onChange={e => handleCountryChange(e.target.value)}\n      >\n        <option value=\"\">Global</option>\n        {fetchedCountries.map((country, i) => (\n          <option key={i} value={country}>\n            {country}\n          </option>\n        ))}\n      </NativeSelect>\n    </FormControl>\n  );\n};\n\nexport default CountryPicker;\n","import React from \"react\";\nimport { Cards, Chart, CountryPicker } from \"./components\";\nimport styles from \"./app.module.css\";\nimport { fetchData } from \"./api\";\n\nclass App extends React.Component {\n  state = {\n    data: {},\n    country: \"\"\n  };\n\n  async componentDidMount() {\n    const fetchedData = await fetchData();\n    this.setState({ data: fetchedData });\n  }\n\n  handleCountryChange = async country => {\n    const fetchedData = await fetchData(country);\n    this.setState({ data: fetchedData, country: country });\n  };\n\n  render() {\n    const { data, country } = this.state;\n    return (\n      <div className={styles.container}>\n        <img\n          className={styles.image}\n          src=\"https://i.ibb.co/7QpKsCX/image.png\"\n          alt=\"covid-19\"\n        />\n        <Cards data={data} />\n        <CountryPicker handleCountryChange={this.handleCountryChange} />\n        <Chart data={data} country={country} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDom from \"react-dom\";\nimport App from \"./app\";\n\nReactDom.render(<App />, document.getElementById(\"root\"));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"app_container__2JKVN\",\"image\":\"app_image__RbrTz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__yjZZH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2p8f9\"};"],"sourceRoot":""}